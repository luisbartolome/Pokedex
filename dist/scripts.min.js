let pokemonRepository = function() { let e = [],
        t = "https://pokeapi.co/api/v2/pokemon/?limit=150";

    function n(t) { e.push(t) }

    function o({ name: e, type: t, weight: n, imageUrl: o }) { let l = document.querySelector("#modal-container");
        l.innerHTML = ""; let a = document.createElement("div");
        a.classList.add("modal"); let c = document.createElement("button");
        c.classList.add("modal-close"), c.innerText = "Close", c.addEventListener("click", i); let s = document.createElement("h1");
        s.innerText = e; let r = document.createElement("p");
        r.innerText = "Type: " + t; let d = document.createElement("p");
        d.innerText = "Weight: " + n + "Kg"; let m = document.createElement("img");
        m.src = o, m.setAttribute("id", "pokemonImage"), a.appendChild(c), a.appendChild(s), a.appendChild(r), a.appendChild(d), a.appendChild(m), l.appendChild(a), l.classList.add("is-visible") }

    function i() { document.querySelector("#modal-container").classList.remove("is-visible") }
    async function l(e) { let t = e.detailsUrl; try { const n = await fetch(t),
                o = await n.json();
            e.imageUrl = o.sprites.front_default, e.height = o.height, e.weight = o.weight, e.type = o.types[0].type.name } catch (e) { console.error(e) } }

    function a(e) { l(e).then(function() { o(e) }) } return window.addEventListener("keyup", e => { let t = document.querySelector("#modal-container"); "Escape" === e.key && t.classList.contains("is-visible") && i() }), { getAll: function() { return e }, add: n, addListItem: function(e) { let t = document.querySelector(".pokemon-list"),
                n = document.createElement("li");
            n.classList.add("group-list-item"); let o = document.createElement("button");
            o.innerText = e.name, o.classList.add("button-class"), o.setAttribute("data-bs-target", "#modal-container"), o.setAttribute("data-bs-toggle", "modal"), o.type = "button", n.appendChild(o), t.appendChild(n), o.addEventListener("click", function() { a(e) }) }, loadList: async function() { try { const e = await fetch(t);
                (await e.json()).results.forEach(function(e) { n({ name: e.name, detailsUrl: e.url }) }) } catch (e) { console.error(e) } }, loadDetails: l, showDetails: a, showModal: o } }();

function filterPokemonList(e) { const t = document.querySelector("ul.pokemon-list"); if (!e) return void resetPokemonList(t); const n = new RegExp(e.replace(/[^a-zA-Z]+/g, ""), "ig");
    ([...t.children].filter(e => !e.innerText.match(n)) || []).forEach(e => e.style.display = "none") }

function resetPokemonList(e = []) {
    [...e.children].forEach(e => e.style.display = "block") }
pokemonRepository.loadList().then(function() { pokemonRepository.getAll().forEach(function(e) { pokemonRepository.addListItem(e) }) });